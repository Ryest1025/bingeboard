Certainly! Here’s a simple example of Firebase authentication for mobile (React) using only Firebase’s SDK (no custom OAuth redirect):

````tsx
import React, { useState } from "react";
import { getAuth, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from "firebase/auth";
import { initializeApp } from "firebase/app";

const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_AUTH_DOMAIN",
  // ...other config
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);

export default function LoginSimple() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState<string | null>(null);

  const handleEmailLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await signInWithEmailAndPassword(auth, email, password);
      setError(null);
      // Redirect or update UI
    } catch (err: any) {
      setError(err.message);
    }
  };

  const handleGoogleLogin = async () => {
    try {
      const provider = new GoogleAuthProvider();
      await signInWithPopup(auth, provider);
      setError(null);
      // Redirect or update UI
    } catch (err: any) {
      setError(err.message);
    }
  };

  return (
    <div>
      <form onSubmit={handleEmailLogin}>
        <input
          type="email"
          value={email}
          onChange={e => setEmail(e.target.value)}
          placeholder="Email"
          required
        />
        <input
          type="password"
          value={password}
          onChange={e => setPassword(e.target.value)}
          placeholder="Password"
          required
        />
        <button type="submit">Login</button>
      </form>
      <button onClick={handleGoogleLogin}>Login with Google</button>
      {error && <div style={{ color: "red" }}>{error}</div>}
    </div>
  );
}
````

**Replace `YOUR_API_KEY` and `YOUR_AUTH_DOMAIN` with your Firebase project’s config.**

**Summary:**  
This code uses Firebase’s SDK for email/password and Google login, with no custom OAuth redirect page.  
It works for mobile and web.

Similar code found with 2 license types