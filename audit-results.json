{
  "summary": {
    "totalFiles": 292,
    "fixedIssues": 0,
    "timestamp": "2025-08-13T01:46:25.617Z",
    "config": {
      "severityLevels": {
        "error": [
          "FORBIDDEN_IMPORT",
          "MISSING_KEY",
          "UNHANDLED_FETCH"
        ],
        "warning": [
          "MISSING_PATTERN",
          "STRUCTURE",
          "TYPESCRIPT"
        ],
        "info": [
          "ACCESSIBILITY",
          "PERFORMANCE",
          "SUGGESTION"
        ]
      },
      "scanPaths": {
        "pages": "client/src/pages/**/*.tsx",
        "components": "client/src/components/**/*.tsx",
        "hooks": "client/src/hooks/**/*.ts",
        "utils": "client/src/utils/**/*.ts"
      },
      "excludePaths": [
        "**/node_modules/**",
        "**/dist/**",
        "**/build/**",
        "**/*.test.tsx",
        "**/*.spec.tsx"
      ],
      "checks": {
        "forbiddenImports": {
          "enabled": true,
          "severity": "error",
          "components": [
            "NavigationHeader",
            "TopNav",
            "MobileNav",
            "LegalFooter"
          ]
        },
        "requiredPatterns": {
          "enabled": true,
          "severity": "warning",
          "patterns": {
            "useAuth": "Authentication hook must be used in all protected pages",
            "useToast": "Toast notifications should be available on all pages",
            "SafeQueryProvider": "React Query should be wrapped properly",
            "ErrorBoundary": "Error boundaries should wrap all major components"
          }
        },
        "accessibility": {
          "enabled": true,
          "severity": "info",
          "patterns": {
            "aria-label": "Interactive elements should have aria-labels",
            "role=": "Semantic roles should be defined",
            "tabIndex": "Keyboard navigation should be supported",
            "focus:": "Focus states should be visible"
          }
        },
        "performance": {
          "enabled": true,
          "severity": "info",
          "patterns": {
            "lazy": "Images should use lazy loading",
            "useMemo": "Expensive calculations should be memoized",
            "useCallback": "Event handlers should be optimized",
            "Suspense": "Dynamic imports should use Suspense"
          }
        },
        "reactImports": {
          "enabled": true,
          "severity": "warning",
          "checkJsxWithoutReact": true
        },
        "errorHandling": {
          "enabled": true,
          "severity": "error",
          "checkAsyncAwait": true,
          "checkFetch": true
        }
      },
      "output": {
        "format": "console",
        "exportJson": false,
        "exportPath": "audit-results.json",
        "eslintCompatible": false,
        "verbosity": "normal"
      }
    }
  },
  "results": {
    "error": [
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ NavigationHeader should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ NavigationHeader should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ NavigationHeader should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ NavigationHeader should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ NavigationHeader should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/activity.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ NavigationHeader should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ NavigationHeader should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/viewing-history-upload.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/show-card.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/layout.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ TopNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/layout.tsx",
        "type": "FORBIDDEN_IMPORT",
        "message": "❌ MobileNav should not be imported directly. It's handled universally by App.tsx",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/advanced-search.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/activity-item.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/ui/carousel.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModalLite.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModal.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/dashboard/UserListsCard.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/NewReleasesCard.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/common/UserFeedback.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/CollectionManager.tsx",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useUserLists.ts",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useTrailer.ts",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useStreamingEnrichedContent.ts",
        "type": "MISSING_KEY",
        "message": "❌ All mapped elements must have unique keys",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useFilterOptions.ts",
        "type": "MISSING_KEY",
        "message": "❌ All mapped elements must have unique keys",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilterOptions.ts",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useEnhancedSearch.ts",
        "type": "MISSING_KEY",
        "message": "❌ All mapped elements must have unique keys",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useBecauseYouWatched.ts",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useBatchStreaming.ts",
        "type": "MISSING_KEY",
        "message": "❌ All mapped elements must have unique keys",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useBatchStreaming.ts",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/use-toast.ts",
        "type": "MISSING_KEY",
        "message": "❌ All mapped elements must have unique keys",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/utils/session.ts",
        "type": "UNHANDLED_FETCH",
        "message": "❌ API calls should have proper error handling",
        "severity": "error",
        "timestamp": "2025-08-13T01:46:25.616Z"
      }
    ],
    "warning": [
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.566Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.566Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.566Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.566Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'WorkingDashboard' should match file name 'working-dashboard'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'UpcomingEnhanced' should match file name 'upcoming-enhanced'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'TermsOfService' should match file name 'terms-of-service'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SubscriptionPage' should match file name 'subscription'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SubscriptionPricing' should match file name 'subscription-pricing'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'StreamingIntegration' should match file name 'streaming-integration'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'StreamingIntegration' should match file name 'streaming-integration-new'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'StreamingDemo' should match file name 'streaming-demo'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'Social' should match file name 'social-new'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SimpleLogin' should match file name 'simple-login'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SimpleAuth' should match file name 'simple-auth'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SimpleAuthMinimal' should match file name 'simple-auth-minimal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SimpleAuth' should match file name 'simple-auth-fixed'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ShowDetails' should match file name 'show-details'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SettingsPage' should match file name 'settings'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/search-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/search-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/search-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/search-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/search-demo.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SearchDemoPage' should match file name 'search-demo'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/safe-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/safe-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/safe-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/safe-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ResetPassword' should match file name 'reset-password'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'PrivacyPolicy' should match file name 'privacy-policy'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'NotificationsDemo' should match file name 'notifications-demo'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'NotificationCenter' should match file name 'notification-center'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/not-found.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/not-found.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/not-found.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/not-found.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/not-found.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'NotFound' should match file name 'not-found'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernSocial' should match file name 'modern-social'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernProfile' should match file name 'modern-profile'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernLists' should match file name 'modern-lists'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernHome' should match file name 'modern-home'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernHomeClean' should match file name 'modern-home-clean'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MobileTestComprehensive' should match file name 'mobile-test-comprehensive'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MobileSocialLogin' should match file name 'mobile-social-login'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MobileLogin' should match file name 'mobile-login'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-import.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-import.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-import.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-import.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MobileHub' should match file name 'mobile-hub'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MobileDiagnostic' should match file name 'mobile-diagnostic'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MobileApp' should match file name 'mobile-app'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'LoginSimple' should match file name 'login-simple'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'LoginMinimal' should match file name 'login-minimal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-clean.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-clean.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-clean.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-clean.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ListsPage' should match file name 'lists'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-new.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'Landing' should match file name 'landing-backup'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/index.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/index.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/index.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/index.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ImportHistory' should match file name 'import-history'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/home.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/home.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/home.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'FriendsDiscovery' should match file name 'friends-discovery'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-login-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'FirebaseAuthTest' should match file name 'firebase-auth-test'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'FindFriendsPage' should match file name 'find-friends'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'FindFriendsBasic' should match file name 'find-friends-basic'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'FilterIntegrationDemo' should match file name 'filter-integration-demo'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-demo.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'FilterExample' should match file name 'filter-demo'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'DataDeletion' should match file name 'data-deletion'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/dashboard.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/dashboard.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/dashboard.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'DashboardIntegrationExample' should match file name 'dashboard-integration-example'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'EnhancedDashboard' should match file name 'dashboard-enhanced'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ComponentsDemo' should match file name 'components-demo'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ComponentDemo' should match file name 'component-demo'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'BulletproofLanding' should match file name 'bulletproof-landing'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/brandfetch-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/brandfetch-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/brandfetch-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/brandfetch-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'AuthComprehensiveTest' should match file name 'auth-comprehensive-test'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/activity.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/activity.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/activity.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/DiscoverStructured.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/DiscoverStructured.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/DiscoverStructured.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernDiscover' should match file name 'modern-discover'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernDiscoverEnhanced' should match file name 'modern-discover-enhanced'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ModernDiscover' should match file name 'enhanced-discover'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useAuth: Authentication hook must be used in all protected pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing useToast: Toast notifications should be available on all pages",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing SafeQueryProvider: React Query should be wrapped properly",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "MISSING_PATTERN",
        "message": "⚠️  Missing ErrorBoundary: Error boundaries should wrap all major components",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'Discover' should match file name 'Discover-aggregated'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'WatchlistManager' should match file name 'watchlist-manager'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'WatchNowButton' should match file name 'watch-now-button'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-upload.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ViewingHistoryUpload' should match file name 'viewing-history-upload'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-import.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ViewingHistoryImport' should match file name 'viewing-history-import'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'TrailerButton' should match file name 'trailer-button'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/top-nav.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'TopNav' should match file name 'top-nav'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/subscription-plans.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SubscriptionPlans' should match file name 'subscription-plans'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-platform-selector.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'StreamingPlatformSelector' should match file name 'streaming-platform-selector'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-marquee-section.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'StreamingMarqueeSection' should match file name 'streaming-marquee-section'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-marquee-modal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'StreamingMarqueeModal' should match file name 'streaming-marquee-modal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/streaming-logos.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'StreamingLogos' should match file name 'streaming-logos'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/sports-card.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SportsCard' should match file name 'sports-card'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SocialShareButtons' should match file name 'social-share-buttons'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/simple-nav.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SimpleNav' should match file name 'simple-nav'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-details-modal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ShowDetailsModal' should match file name 'show-details-modal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/show-card.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ShowCard' should match file name 'show-card'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/share-button.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ShareButton' should match file name 'share-button'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/search-alerts.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'SearchAlerts' should match file name 'search-alerts'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/recommendation-modal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'RecommendationModal' should match file name 'recommendation-modal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/premium-features-showcase.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'PremiumFeaturesShowcase' should match file name 'premium-features-showcase'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'PremiumFeatureGate' should match file name 'premium-feature-gate'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-badge.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'PremiumBadge' should match file name 'premium-badge'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/preferences-panel.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'PreferencesPanel' should match file name 'preferences-panel'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'OnboardingModal' should match file name 'onboarding-modal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'NavigationHeader' should match file name 'navigation-header'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-fixed.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'NavigationHeader' should match file name 'navigation-header-fixed'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-backup.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'NavigationHeader' should match file name 'navigation-header-backup'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/monetization-dashboard.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MonetizationDashboard' should match file name 'monetization-dashboard'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/mobile-nav.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'MobileNav' should match file name 'mobile-nav'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ListSelectorModal' should match file name 'list-selector-modal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/legal-footer.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'LegalFooter' should match file name 'legal-footer'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'EnhancedOnboardingModal' should match file name 'enhanced-onboarding-modal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-advanced-search.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'EnhancedAdvancedSearch' should match file name 'enhanced-advanced-search'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'DiscoverFilters' should match file name 'discover-filters'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/desktop-footer.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'DesktopFooter' should match file name 'desktop-footer'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/debug-ai-recommendations.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'DebugAiRecommendations' should match file name 'debug-ai-recommendations'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/consent-banner.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ConsentBanner' should match file name 'consent-banner'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/competitive-advantages.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'CompetitiveAdvantages' should match file name 'competitive-advantages'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/category-icons.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'TrendingIcon' should match file name 'category-icons'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'AiRecommendations' should match file name 'ai-recommendations'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/affiliate-monetization.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'AffiliateMonetization' should match file name 'affiliate-monetization'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/advanced-search.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'AdvancedSearch' should match file name 'advanced-search'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'AdPlayer' should match file name 'ad-player'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/activity-item.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'ActivityItem' should match file name 'activity-item'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/ui/tooltip.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/toaster.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/textarea.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/tabs.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/table.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/switch.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/slider.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/skeleton.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/separator.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/select.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/scroll-area.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/resizable.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/recommendation-icon.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'RecommendationIcon' should match file name 'recommendation-icon'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/radio-group.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/progress.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/premium.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'LoadingSkeleton' should match file name 'premium'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/popover.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/navigation-menu.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/menubar.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/input.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/input-otp.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/hover-card.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/dropdown-menu.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/drawer.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/dialog.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/context-menu.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/checkbox.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/card.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/breadcrumb.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/avatar.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/alert-dialog.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/accordion.tsx",
        "type": "TYPESCRIPT",
        "message": "⚠️  Props should be properly typed with TypeScript interfaces or types",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/onboarding/onboarding-modal.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'OnboardingModal' should match file name 'onboarding-modal'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Premium.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'OnboardingModal' should match file name 'OnboardingModal-Premium'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Old.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'OnboardingModal' should match file name 'OnboardingModal-Old'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-New.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'OnboardingModal' should match file name 'OnboardingModal-New'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Fixed.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'OnboardingModal' should match file name 'OnboardingModal-Fixed'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Backup.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'OnboardingModal' should match file name 'OnboardingModal-Backup'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/dashboard/RecentActivityCard.tsx",
        "type": "STRUCTURE",
        "message": "⚠️  Component name 'FriendActivityCard' should match file name 'RecentActivityCard'",
        "severity": "warning",
        "timestamp": "2025-08-13T01:46:25.611Z"
      }
    ],
    "info": [
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.568Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.568Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.568Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.568Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.568Z"
      },
      {
        "file": "client/src/pages/working-dashboard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.568Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/watchlist.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.569Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/upcoming-enhanced.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/terms-of-service.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/subscription-pricing.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.570Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-integration-new.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/streaming-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/sports.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.571Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/social-new.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-login.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-minimal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.572Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/simple-auth-fixed.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/signup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/show-details.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/settings.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.573Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/reset-password.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/privacy-policy.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notifications-demo.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/notification-center.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.574Z"
      },
      {
        "file": "client/src/pages/not-found.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-social.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-profile.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-lists.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.575Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/modern-home-clean.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.576Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-test-comprehensive.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-social-login.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-login.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-hub.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-diagnostic.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.577Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/mobile-app.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-simple.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/login-minimal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.578Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/lists.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/landing-backup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.579Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/import-history.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/home.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/friends-discovery.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.580Z"
      },
      {
        "file": "client/src/pages/firebase-auth-test.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-simple.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/find-friends-basic.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-integration-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/filter-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.581Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/features.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/eula.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/data-deletion.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.582Z"
      },
      {
        "file": "client/src/pages/dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-integration-example.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/dashboard-enhanced.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/components-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.583Z"
      },
      {
        "file": "client/src/pages/component-demo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/bulletproof-landing.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/auth-comprehensive-test.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/activity.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.584Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/modern-discover-enhanced.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.585Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/enhanced-discover.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/DiscoverPage.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/pages/archived-discover-pages/Discover-aggregated.tsx",
        "type": "UNHANDLED_ASYNC",
        "message": "❌ Async functions should have proper error handling with try/catch",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watchlist-manager.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/watch-now-button.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.586Z"
      },
      {
        "file": "client/src/components/viewing-history-upload.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-upload.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-upload.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-upload.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-upload.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-import.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-import.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-import.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-import.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-import.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/viewing-history-import.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/trailer-button.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.587Z"
      },
      {
        "file": "client/src/components/top-nav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/top-nav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/top-nav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/top-nav.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/top-nav.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/toast.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/toast.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/toast.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/toast.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/toast.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/subscription-plans.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/subscription-plans.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/subscription-plans.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/subscription-plans.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/subscription-plans.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/subscription-plans.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-platform-selector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-platform-selector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-platform-selector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-platform-selector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-platform-selector.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-platform-selector.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-marquee-section.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.588Z"
      },
      {
        "file": "client/src/components/streaming-marquee-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/streaming-marquee-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/streaming-marquee-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/streaming-marquee-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/streaming-marquee-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/streaming-marquee-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/streaming-logos.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/sports-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/sports-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/sports-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/sports-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/sports-card.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/sports-card.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/social-share-buttons.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/simple-nav.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-details-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-details-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-details-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-details-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-details-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-details-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.589Z"
      },
      {
        "file": "client/src/components/show-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/show-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/show-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/show-card.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/show-card.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/share-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/share-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/share-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/share-button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/share-button.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/share-button.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/search-alerts.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/search-alerts.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/search-alerts.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/search-alerts.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/search-alerts.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/search-alerts.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/recommendation-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/recommendation-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/recommendation-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/recommendation-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/recommendation-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/recommendation-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.590Z"
      },
      {
        "file": "client/src/components/premium-features-showcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-features-showcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-features-showcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-features-showcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-features-showcase.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-feature-gate.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/premium-badge.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/preferences-panel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/preferences-panel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/preferences-panel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/preferences-panel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/preferences-panel.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/preferences-panel.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.591Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/onboarding-modal.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-fixed.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-fixed.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-backup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/navigation-header-backup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/monetization-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/monetization-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/monetization-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/monetization-dashboard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/monetization-dashboard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/monetization-dashboard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/mobile-nav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/mobile-nav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/mobile-nav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/mobile-nav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/mobile-nav.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/mobile-nav.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.592Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/list-selector-modal.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/legal-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/legal-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/legal-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/legal-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/legal-footer.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/layout.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-onboarding-modal.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.593Z"
      },
      {
        "file": "client/src/components/enhanced-advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/enhanced-advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/enhanced-advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/enhanced-advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/enhanced-advanced-search.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/enhanced-advanced-search.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/discover-filters.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/desktop-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/desktop-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/desktop-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/desktop-footer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/desktop-footer.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/desktop-footer.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/debug-ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/debug-ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/debug-ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/debug-ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/debug-ai-recommendations.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/consent-banner.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/consent-banner.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/consent-banner.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/consent-banner.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/consent-banner.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/consent-banner.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/competitive-advantages.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.594Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ai-recommendations.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/affiliate-monetization.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/affiliate-monetization.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/affiliate-monetization.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/affiliate-monetization.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/affiliate-monetization.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/affiliate-monetization.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/advanced-search.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/advanced-search.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.595Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/ad-player.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/activity-item.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/activity-item.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/activity-item.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/activity-item.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/activity-item.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/StreamingAvailability.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/StreamingAvailability.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/StreamingAvailability.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/StreamingAvailability.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SocialMediaConnections.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SocialMediaConnections.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SocialMediaConnections.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SocialMediaConnections.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SocialMediaConnections.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SocialMediaConnections.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SimpleTopNav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SimpleTopNav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SimpleTopNav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SimpleTopNav.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SimpleTopNav.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SessionStatusButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SessionStatusButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SessionStatusButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SessionStatusButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SessionStatusButton.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/SessionStatusButton.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.596Z"
      },
      {
        "file": "client/src/components/RecommendationCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/RecommendationCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/RecommendationCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/RecommendationCard.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LogoutButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LogoutButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LogoutButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LogoutButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LogoutButton.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LoginButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LoginButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LoginButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LoginButton.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/LoginButton.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/ErrorBoundary.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/ErrorBoundary.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/ErrorBoundary.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/ErrorBoundary.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/ErrorBoundary.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.597Z"
      },
      {
        "file": "client/src/components/BrandShowcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/BrandShowcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/BrandShowcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/BrandShowcase.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/BrandShowcase.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/BingeBoardHeader.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/tooltip.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/toggle.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/toggle-group.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/toast.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/textarea.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/tabs.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/table.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/switch.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.598Z"
      },
      {
        "file": "client/src/components/ui/sidebar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/sidebar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/sheet.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/separator.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/select.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/scroll-area.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/resizable.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.599Z"
      },
      {
        "file": "client/src/components/ui/radio-group.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/premium.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/premium.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/premium.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/premium.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/popover.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/pagination.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/pagination.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/pagination.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/navigation-menu.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/menubar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/input.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/input-otp.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.600Z"
      },
      {
        "file": "client/src/components/ui/hover-card.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/form.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/dropdown-menu.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/drawer.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/dialog.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/context-menu.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/command.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/checkbox.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.601Z"
      },
      {
        "file": "client/src/components/ui/carousel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/carousel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/carousel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/carousel.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/calendar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/calendar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/calendar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/calendar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/button.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/button.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/breadcrumb.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/badge.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/avatar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/alert.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/alert-dialog.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/alert-dialog.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/alert-dialog.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/alert-dialog.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/alert-dialog.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.602Z"
      },
      {
        "file": "client/src/components/ui/accordion.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/StreamingPlatformSelector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/StreamingPlatformSelector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/StreamingPlatformSelector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/StreamingPlatformSelector.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/StreamingPlatformSelector.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/StreamingLogos.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/HorizontalScrollContainer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/HorizontalScrollContainer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/HorizontalScrollContainer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/HorizontalScrollContainer.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/HorizontalScrollContainer.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/ContentCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/ContentCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/ContentCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/ContentCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/ContentCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/ui/ContentCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/streaming/StreamingPlatformsDisplay.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/streaming/StreamingPlatformsDisplay.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/search/ShowDetailsModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/search/ShowDetailsModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/search/ShowDetailsModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/search/ShowDetailsModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/search/ShowDetailsModal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/search/ShowDetailsModal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.603Z"
      },
      {
        "file": "client/src/components/search/SearchResultCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/SearchResultCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/SearchResultCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/SearchPreviewDropdown.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/RecentSearches.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/PlatformBadges.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/HybridSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/HybridSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/HybridSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/HybridSearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/HybridSearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedShowModal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchErrorUI.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchErrorUI.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchErrorUI.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchErrorUI.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchErrorUI.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.604Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchDropdown.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchDropdown.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchDropdown.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchDropdown.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchDropdown.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/EnhancedSearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModalLite.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModalLite.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModalLite.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModalLite.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModalLite.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedShowModal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.605Z"
      },
      {
        "file": "client/src/components/search/BrandedSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/search/BrandedSearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/search/BrandedSearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/search/BrandedSearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/preferences/PreferencesPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/preferences/PreferencesPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/preferences/PreferencesPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/preferences/PreferencesPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/preferences/PreferencesPanel.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/preferences/PreferencesPanel.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/onboarding-modal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.606Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Premium.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.607Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Premium.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Premium.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Premium.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Premium.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Old.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Old.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Old.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Old.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Old.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Old.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.608Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-New.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-New.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-New.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-New.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-New.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-New.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Fixed.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Fixed.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Fixed.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Backup.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Backup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.609Z"
      },
      {
        "file": "client/src/components/onboarding/OnboardingModal-Backup.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/WatchlistQuickFilter.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/WatchlistQuickFilter.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/RecommendationFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/RecommendationFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/RecommendationFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/RecommendationFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/RecommendationFilter.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/RecommendationFilter.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/FriendFeedFilterChips.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/FriendFeedFilterChips.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/CustomListFilterPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/CustomListFilterPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/CustomListFilterPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/CustomListFilterPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/CustomListFilterPanel.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/filters/CustomListFilterPanel.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.610Z"
      },
      {
        "file": "client/src/components/demo/BrandedSearchShowcase.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/demo/BrandedSearchShowcase.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/WelcomeCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/UserListsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/UserListsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/UserListsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/UserListsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/UserListsCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SpotlightCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SpotlightCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SpotlightCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SpotlightCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SpotlightCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SearchBar.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/SearchBar.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/RecommendationsCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/RecentActivityCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/QuickStatsCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/QuickActionsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/QuickActionsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/QuickActionsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/QuickActionsCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.611Z"
      },
      {
        "file": "client/src/components/dashboard/NewReleasesCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/CurrentlyWatchingCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/BecauseYouWatchedCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/WatchlistQuickFilter.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/WatchlistQuickFilter.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FriendFeedFilterChips.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FriendFeedFilterChips.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FilterDemo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FilterDemo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FilterDemo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FilterDemo.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/FilterDemo.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/CustomListFilterPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/CustomListFilterPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/dashboard/filters/CustomListFilterPanel.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/common/UserFeedback.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/common/UserFeedback.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/common/UserFeedback.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/common/UserFeedback.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/common/UserFeedback.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.612Z"
      },
      {
        "file": "client/src/components/common/UserFeedback.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/SectionTitle.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/RecommendationGrid.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/RecommendationCard.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/RecommendationCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/RecommendationCard.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/FilterBadges.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/FilterBadges.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/FilterBadges.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/FilterBadges.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/EnhancedFilterSystem.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/EnhancedFilterSystem.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/EnhancedFilterSystem.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/EnhancedFilterSystem.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/EnhancedFilterSystem.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/EnhancedFilterSystem.tsx",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.613Z"
      },
      {
        "file": "client/src/components/common/CollectionManager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/components/common/CollectionManager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/components/common/CollectionManager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/components/common/CollectionManager.tsx",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/components/common/CollectionManager.tsx",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useWatchProviders.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useWatchProviders.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useViewingHistory.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useViewingHistory.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useUserLists.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useTrailer.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useTrailer.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useStreamingEnrichedContent.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useStreaming.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useStreaming.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useShowDetails.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useShowDetails.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useSession.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useSession.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useSearchShows.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useSearchShows.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.614Z"
      },
      {
        "file": "client/src/hooks/useRecommendedShows.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useRecommendationActions.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useNotifications.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useNotifications.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useNotifications.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useLocalStorage.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useLocalStorage.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useLocalStorage.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilters.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilters.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilteredContent.ts",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding aria-label: Interactive elements should have aria-labels",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilteredContent.ts",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding role=: Semantic roles should be defined",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilteredContent.ts",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding tabIndex: Keyboard navigation should be supported",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilteredContent.ts",
        "type": "ACCESSIBILITY",
        "message": "💡 Consider adding focus:: Focus states should be visible",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilteredContent.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilteredContent.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilteredContent.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilterOptions.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useFilterOptions.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useEnhancedSearch.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useDebouncedValue.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useDebouncedValue.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useDebouncedValue.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useDebounce.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useDebounce.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useDebounce.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useDashboardFeed.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useBecauseYouWatched.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useBatchStreaming.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useBatchStreaming.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.615Z"
      },
      {
        "file": "client/src/hooks/useAuth.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth-fixed.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth-fixed.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth-fixed.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth-clean.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth-clean.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/useAuth-clean.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/use-toast.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider using useCallback for event handlers to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/hooks/use-toast.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/utils/show-utils.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/utils/show-utils.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/utils/session.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/utils/session.ts",
        "type": "UNHANDLED_ASYNC",
        "message": "❌ Async functions should have proper error handling with try/catch",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/utils/filterUtils.ts",
        "type": "PERFORMANCE",
        "message": "💡 Consider memoizing large objects to prevent unnecessary re-renders",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      },
      {
        "file": "client/src/utils/filterUtils.ts",
        "type": "MISSING_REACT_IMPORT",
        "message": "⚠️  JSX detected but React not imported. Consider adding 'import React from \"react\"' or ensure JSX transform is configured",
        "severity": "info",
        "timestamp": "2025-08-13T01:46:25.616Z"
      }
    ]
  },
  "totals": {
    "error": 56,
    "warning": 402,
    "info": 963
  }
}