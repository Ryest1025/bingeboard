name: Analyze Unused Code

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  analyze-unused:
    name: Run unused exports & dependency analysis (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unused code analysis
        id: analyze
        run: |
          chmod +x ./scripts/analyze-unused.sh
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            export STRICT_MAIN_NO_WARN=1
          fi
          ./scripts/analyze-unused.sh || EXIT_CODE=$?
          EXIT_CODE=${EXIT_CODE:-0}
          echo "Analyzer exit code: $EXIT_CODE"
          if [ "$EXIT_CODE" -eq 1 ]; then
            echo "status=FAIL" >> $GITHUB_OUTPUT
          elif [ "$EXIT_CODE" -eq 2 ]; then
            echo "status=WARN" >> $GITHUB_OUTPUT
          else
            echo "status=PASS" >> $GITHUB_OUTPUT
          fi
          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT
          exit 0

      - name: Upload analysis reports
        uses: actions/upload-artifact@v4
        with:
          name: unused-code-reports
          path: analysis/report-*.md

      - name: Build inline summary (best-effort)
        if: github.event_name == 'pull_request'
        id: summary
        run: |
          REPORT_FILE=$(ls -1 analysis/report-*.md 2>/dev/null | head -n1 || true)
          if [ -z "$REPORT_FILE" ]; then
            echo "report_body=No report markdown generated." >> $GITHUB_OUTPUT
            exit 0
          fi
            awk 'NR==1, /^$/ {print}' "$REPORT_FILE" | head -n 40 > /tmp/summary.md
          ESCAPED=$(sed 's/`/\\`/g' /tmp/summary.md)
          echo "report_body<<'EOF'" >> $GITHUB_OUTPUT
          echo "$ESCAPED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          if [ -f analysis/summary-latest.txt ]; then
            SECOND=$(sed 's/`/\\`/g' analysis/summary-latest.txt | head -n 60)
            echo "report_delta<<'EOF'" >> $GITHUB_OUTPUT
            echo "$SECOND" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "report_delta=No diff summary available." >> $GITHUB_OUTPUT
          fi
          echo "analyze_status=${{ steps.analyze.outputs.status }}" >> $GITHUB_OUTPUT

      - name: Comment on PR with analysis report summary
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Unused Code Analysis Report
            Results for Node.js versions tested: 18, 20.

            Overall status for this matrix leg: ${{ steps.analyze.outputs.status }}

            <details><summary>Summary (first report excerpt)</summary>

            ${{ steps.summary.outputs.report_body }}

            </details>

            <details><summary>Unused Export & Dependency Delta vs Baseline</summary>

            ${{ steps.summary.outputs.report_delta }}

            </details>

            Full reports are available as workflow artifacts (unused-code-reports). If new unused exports or dependencies were introduced, this PR should adjust code or intentionally update the baseline.

            Exit code legend: PASS=0 WARN=2 FAIL=1.

      - name: Fail job if analysis status FAIL
        if: steps.analyze.outputs.status == 'FAIL'
        run: exit 1
